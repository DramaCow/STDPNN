        case 2: {
          RecordEvent *re = dynamic_cast<RecordEvent*>(e);

          printf("[%.2f s]\n", t_sim);

          double ave_w_1 = 0.0;
          for (int id = 0; id < a_num/2; ++id)
          {
            for (Synapse *&sy : sn.outputs(a_neuron[id]))
            {
              ave_w_1 += sy->get_w();
            }
          }
          ave_w_1 /= (a_num/2)*W_MAX;

          double ave_w_2 = 0.0;
          for (int id = a_num/2; id < a_num; ++id)
          {
            for (Synapse *&sy : sn.outputs(a_neuron[id]))
            {
              ave_w_2 += sy->get_w();
            }
          }
          ave_w_2 /= (a_num/2)*W_MAX;

          w1_record[re->idx] = ave_w_1; 
          w2_record[re->idx] = ave_w_2; 

          double t_delay = rec_period < (duration-t_sim) ? rec_period : (duration-t_sim);
          if (t_delay > 0)
          {
            EQ.insert(new RecordEvent(t_sim + t_delay, 2, re->idx + 1));
          }

          break;
        }

        default: {
          std::cout << "ERROR - INVALID EVENT!" << std::endl;
          return 1;
        }
      }
      EQ.del_min();
    }
  }

  // export results to binary files
  std::string fig_num(argv[1]);
  {
    IFNeuron *N = dynamic_cast<IFNeuron*>(s_neuron[0]);
    FILE* file = fopen((fig_num + "A.dat").c_str(), "wb");
    int entries = N->t_record.size();
    fwrite(&entries, sizeof(int), 1, file);
    fwrite(&N->t_record[0], sizeof(double), entries, file);
    fwrite(&N->V_record[0], sizeof(double), entries, file);
    fclose(file);
  }
  {
    IFNeuron *N = dynamic_cast<IFNeuron*>(s_neuron[0]);
    FILE* file = fopen((fig_num + "B.dat").c_str(), "wb");
    int entries = N->t_record.size();
    fwrite(&entries, sizeof(int), 1, file);
    fwrite(&N->t_record[0], sizeof(double), entries, file);
    fwrite(&N->g_record[0], sizeof(double), entries, file);
    fclose(file);
  }
  {
    FILE* file = fopen((fig_num + "C.dat").c_str(), "wb");
    fwrite(&a_num, sizeof(int), 1, file);
    for (double id = 0.0; id < a_num; id+=1.0)
    {
      fwrite(&id, sizeof(double), 1, file); 
    }
    for (int id = 0; id < a_num; ++id)
    {
      for (Synapse *&sy : sn.outputs(a_neuron[id]))
      {
        double w = sy->get_w();
        fwrite(&w, sizeof(double), 1, file);
      }
    }
    fclose(file);
  }
  {
    FILE* file = fopen((fig_num + "D.dat").c_str(), "wb");
    fwrite(&rec_entries, sizeof(int), 1, file);
    fwrite(&t_record[0], sizeof(double), rec_entries, file);
    fwrite(&w1_record[0], sizeof(double), rec_entries, file);
    fwrite(&w2_record[0], sizeof(double), rec_entries, file);
    fclose(file);
  }


  EM.insert(new RecordEvent(t_sim, 0));
